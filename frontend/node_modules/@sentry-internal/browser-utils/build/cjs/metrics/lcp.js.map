{"version":3,"file":"lcp.js","sources":["../../../src/metrics/lcp.ts"],"sourcesContent":["import type { SpanAttributes } from '@sentry/core';\nimport {\n  browserPerformanceTimeOrigin,\n  getActiveSpan,\n  getClient,\n  getCurrentScope,\n  getRootSpan,\n  htmlTreeAsString,\n  logger,\n  SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME,\n  SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT,\n  SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  spanToJSON,\n} from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { addLcpInstrumentationHandler } from './instrument';\nimport { msToSec, startStandaloneWebVitalSpan } from './utils';\nimport { onHidden } from './web-vitals/lib/onHidden';\n\n/**\n * Starts tracking the Largest Contentful Paint on the current page and collects the value once\n *\n * - the page visibility is hidden\n * - a navigation span is started (to stop LCP measurement for SPA soft navigations)\n *\n * Once either of these events triggers, the LCP value is sent as a standalone span and we stop\n * measuring LCP for subsequent routes.\n */\nexport function trackLcpAsStandaloneSpan(): void {\n  let standaloneLcpValue = 0;\n  let standaloneLcpEntry: LargestContentfulPaint | undefined;\n  let pageloadSpanId: string | undefined;\n\n  if (!supportsLargestContentfulPaint()) {\n    return;\n  }\n\n  let sentSpan = false;\n  function _collectLcpOnce() {\n    if (sentSpan) {\n      return;\n    }\n    sentSpan = true;\n    if (pageloadSpanId) {\n      _sendStandaloneLcpSpan(standaloneLcpValue, standaloneLcpEntry, pageloadSpanId);\n    }\n    cleanupLcpHandler();\n  }\n\n  const cleanupLcpHandler = addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1] as LargestContentfulPaint | undefined;\n    if (!entry) {\n      return;\n    }\n    standaloneLcpValue = metric.value;\n    standaloneLcpEntry = entry;\n  }, true);\n\n  onHidden(() => {\n    _collectLcpOnce();\n  });\n\n  // Since the call chain of this function is synchronous and evaluates before the SDK client is created,\n  // we need to wait with subscribing to a client hook until the client is created. Therefore, we defer\n  // to the next tick after the SDK setup.\n  setTimeout(() => {\n    const client = getClient();\n\n    if (!client) {\n      return;\n    }\n\n    const unsubscribeStartNavigation = client.on('startNavigationSpan', () => {\n      _collectLcpOnce();\n      unsubscribeStartNavigation?.();\n    });\n\n    const activeSpan = getActiveSpan();\n    if (activeSpan) {\n      const rootSpan = getRootSpan(activeSpan);\n      const spanJSON = spanToJSON(rootSpan);\n      if (spanJSON.op === 'pageload') {\n        pageloadSpanId = rootSpan.spanContext().spanId;\n      }\n    }\n  }, 0);\n}\n\n/**\n * Exported only for testing!\n */\nexport function _sendStandaloneLcpSpan(\n  lcpValue: number,\n  entry: LargestContentfulPaint | undefined,\n  pageloadSpanId: string,\n) {\n  DEBUG_BUILD && logger.log(`Sending LCP span (${lcpValue})`);\n\n  const startTime = msToSec((browserPerformanceTimeOrigin() || 0) + (entry?.startTime || 0));\n  const routeName = getCurrentScope().getScopeData().transactionName;\n\n  const name = entry ? htmlTreeAsString(entry.element) : 'Largest contentful paint';\n\n  const attributes: SpanAttributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.lcp',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'ui.webvital.lcp',\n    [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: 0, // LCP is a point-in-time metric\n    // attach the pageload span id to the LCP span so that we can link them in the UI\n    'sentry.pageload.span_id': pageloadSpanId,\n  };\n\n  if (entry) {\n    entry.element && (attributes['lcp.element'] = htmlTreeAsString(entry.element));\n    entry.id && (attributes['lcp.id'] = entry.id);\n\n    // Trim URL to the first 200 characters.\n    entry.url && (attributes['lcp.url'] = entry.url.trim().slice(0, 200));\n\n    // loadTime is the time of LCP that's related to receiving the LCP element response..\n    entry.loadTime != null && (attributes['lcp.loadTime'] = entry.loadTime);\n\n    // renderTime is loadTime + rendering time\n    // it's 0 if the LCP element is loaded from a 3rd party origin that doesn't send the\n    // `Timing-Allow-Origin` header.\n    entry.renderTime != null && (attributes['lcp.renderTime'] = entry.renderTime);\n\n    entry.size != null && (attributes['lcp.size'] = entry.size);\n  }\n\n  const span = startStandaloneWebVitalSpan({\n    name,\n    transaction: routeName,\n    attributes,\n    startTime,\n  });\n\n  if (span) {\n    span.addEvent('lcp', {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: lcpValue,\n    });\n\n    // LCP is a point-in-time metric, so we end the span immediately\n    span.end(startTime);\n  }\n}\n\nfunction supportsLargestContentfulPaint(): boolean {\n  try {\n    return PerformanceObserver.supportedEntryTypes.includes('largest-contentful-paint');\n  } catch {\n    return false;\n  }\n}\n"],"names":["addLcpInstrumentationHandler","onHidden","getClient","getActiveSpan","getRootSpan","spanToJSON","DEBUG_BUILD","logger","msToSec","browserPerformanceTimeOrigin","getCurrentScope","htmlTreeAsString","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME","startStandaloneWebVitalSpan","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE"],"mappings":"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"}